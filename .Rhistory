filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),med_profiles=median(profiles,na.rm=T),med_teammates=median(teammates,na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
library(data.table); library(dplyr); library(tidyr); library(ggplot2); library(xts)
responders <- read.table(file.choose(),sep=',',header=T)
bus_users <- read.table('~/Downloads/bus_users.csv',header=T,sep=',')
updates <- read.table('~/Downloads/bus_updates.csv',header=T,sep=',')
names(responders) <- c('response_id','date','user_id','ip','page','referrer',
'user_agent','business_user','awesome_user','individual','plan',
'answer_one','answer_two','answer_three')
names(updates) <- c('user_id','updates')
names(bus_users) <- c('user_id','plan','profiles','teammates')
business_responders <- merge(responders,bus_users, by='user_id')
business_responders <- merge(business_responders,updates, by='user_id',all.x=T)
business_responders <- business_responders %>%
mutate(updates_per_profile_per_day = updates/profiles/30)
business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),med_profiles=median(profiles,na.rm=T),med_teammates=median(teammates,na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),med_profiles=median(profiles))
business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),med_teammates=median(teammates,na.rm=T))
business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),med_teammates=median(teammates))
business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),med_profiles=median(profiles),med_teammates=median(teammates,na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
trialists <- responders %>% filter(!(user_id %in% bus_users$user_id))
trialists %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id)) %>%
mutate(proportion_responses=users/sum(users))
business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),med_profiles=median(as.numeric(profiles)),med_teammates=median(as.numeric(teammates),na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),med_profiles=median(as.numeric(profiles)),med_teammates=median(as.numeric(teammates),na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
Sys.Date() - 30
bus_team_members <- read.table('~/Downloads/bus_team_members.csv',sep=',',header=T)
bus_team_members <- read.table('~/Downloads/bus_team_members.csv',sep=',',header=T)
user_ids <- bus_team_members$user_id
team_member_ids <- bus_team_members$PROFILE.TEAM.MEMBERS.Team.Member.User.Id
user_ids <- bus_team_members$PROFILE.TEAM.MEMBERS.User.Id
ids <- rbind(user_ids,team_member_ids)
user_ids <- as.factor(bus_team_members$PROFILE.TEAM.MEMBERS.User.Id)
team_member_ids <- as.factor(bus_team_members$PROFILE.TEAM.MEMBERS.Team.Member.User.Id)
ids <- rbind(user_ids,team_member_ids)
head(ids)
ids <- as.data.frame(rbind(user_ids,team_member_ids))
head(ids)
names(bus_team_members) <- c('user_id','team_member_id','plan')
bus_team_members %>% gather(id,type,user_id:team_member_id)
bus_member_ids <- bus_team_members %>% gather(id,type,user_id:team_member_id)
bus_member_ids <- bus_team_members %>% gather(id,user_id:team_member_id)
bus_member_ids <- bus_team_members %>% select(-plan) %>% gather(id,type, user_id:team_member_id)
bus_member_ids <- bus_team_members %>% gather(id,type, user_id:team_member_id)
uniqie_bus_ids <- unique(bus_member_ids)
uniqie_bus_ids <- bus_member_ids[!duplicated(bus_member_ids$id)]
uniqie_bus_ids <- bus_member_ids[!duplicated(bus_member_ids$user_id)]
head(bus_member_ids)
bus_member_ids <- bus_team_members %>% select(-plan) %>% gather(id,type, user_id:team_member_id)
head(bus_member_ids)
bus_member_ids <- bus_team_members %>% select(-plan) %>% gather(type,id, user_id:team_member_id)
head(bus_member_ids)
unique_ids <- unique(bus_member_ids)
write.table(unique_ids,'~/Downloads/unique_ids.csv',sep=',',header=T)
write.table(unique_ids,'~/Downloads/unique_ids.csv',sep=',',row.names = F)
uniques <- unique_ids[!duplicated(unique_ids$id),]
stripe_plans <- read.table('~/Downloads/stripe_plans.csv',header=T,sep=',')
responders <- read.table(file.choose(),sep=',',header=T)
bus_users <- read.table('~/Downloads/bus_users.csv',header=T,sep=',')
names(responders) <- c('response_id','date','user_id','ip','page','referrer',
'user_agent','business_user','awesome_user','individual','plan',
'answer_one','answer_two','answer_three')
updates <- read.table('~/Downloads/bus_updates.csv',header=T,sep=',')
names(updates) <- c('user_id','updates')
names(bus_users) <- c('user_id','plan','profiles','teammates')
names(stripe_plans) <- c('customer','interval','interval_count','amount','plan','user_id')
business_responders <- merge(responders,bus_users, by='user_id',all.x=T)
business_responders <- merge(business_responders,updates, by='user_id',all.x=T)
business_responders <- merge(business_responders,stripe_plans,by='user_id',all.x=T)
business_responders <- business_responders %>%
mutate(updates_per_profile_per_day = updates/profiles/30)
by_response_one <- business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),
med_profiles=median(as.numeric(profiles),na.rm=T),
med_teammates=median(as.numeric(teammates),na.rm=T),
med_value=median(as.numeric(amount),na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
by_response_one
by_response_one
response_one_averages <- business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),
avg_profiles=mean(as.numeric(profiles),na.rm=T),
avg_teammates=mean(as.numeric(teammates),na.rm=T),
avg_value=mean(as.numeric(amount),na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
response_one_averages
stripe_plans %>% arrange(desc(amount))
stripe_plans <- stripe_plans %>% arrange(desc(amount))
head(stripe_plans)
stripe_plans[1:20,]
stripe_plans <- read.table('~/Downloads/stripe_plans.csv',header=T,sep=',')
names(stripe_plans) <- c('customer','interval','amount','plan','start_date','canceled_date','user_id','interval_count')
business_responders <- merge(responders,bus_users, by='user_id',all.x=T)
business_responders <- merge(business_responders,updates, by='user_id',all.x=T)
business_responders <- merge(business_responders,stripe_plans,by='user_id',all.x=T)
business_responders <- business_responders %>%
mutate(value = amount*interval_count,updates_per_profile_per_day = updates/profiles/30)
response_one_medians <- business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),
med_profiles=median(as.numeric(profiles),na.rm=T),
med_teammates=median(as.numeric(teammates),na.rm=T),
med_value=median(as.numeric(amount),na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
## Averages
response_one_averages <- business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),
avg_profiles=mean(as.numeric(profiles),na.rm=T),
avg_teammates=mean(as.numeric(teammates),na.rm=T),
avg_value=mean(as.numeric(amount),na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
response_one_medians
response_one_medians
response_one_medians <- business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),
med_profiles=median(as.numeric(profiles),na.rm=T),
med_teammates=median(as.numeric(teammates),na.rm=T),
med_value=median(as.numeric(value),na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
## Averages
response_one_averages <- business_responders %>%
filter(answer_one != '' & profiles > 0) %>%
group_by(answer_one) %>%
summarise(users=n_distinct(user_id),
avg_profiles=mean(as.numeric(profiles),na.rm=T),
avg_teammates=mean(as.numeric(teammates),na.rm=T),
avg_value=mean(as.numeric(value),na.rm=T),
avg_updates_per_profile_per_day=mean(updates_per_profile_per_day,na.rm=T)) %>%
mutate(proportion_responses=users/sum(users))
response_one_medians
response_one_averages
stripe <- read.table('~/Downloads/stripe.csv',sep=',',header=T)
stripe$start_date <- as.Date(as.POSIXlt(stripe$start, format="%Y-%m-%d %H:%M:%S"))
stripe$end_date <- as.Date(as.POSIXlt(stripe$canceled_at, format="%Y-%m-%d %H:%M:%S"))
stripe %>% filter(canceled_at == '' & ended_at != '') %>% select(canceled_at,ended_at)
churned_biz <- stripe %>%
filter(!(canceled_at == '' & ended_at == '') & plan_id != 'pro-annual' & plan_id != 'pro-monthly')
churned_biz <- churned_biz %>%
mutate(plan_length = as.numeric(cancel_date-start_date))
churned_biz$cancel_date <- as.Date(as.POSIXlt(churned_biz$canceled_at, format="%Y-%m-%d %H:%M:%S"))
churned_biz$start_date <- as.Date(as.POSIXlt(churned_biz$start, format="%Y-%m-%d %H:%M:%S"))
churned_biz <- churned_biz %>%
mutate(plan_length = as.numeric(cancel_date-start_date))
by_biz_cancel_date <- stripe %>%
filter(!(canceled_at == '' & ended_at == '') & plan_id != 'pro-annual' & plan_id != 'pro-monthly') %>%
group_by(plan_id,end_date) %>%
summarise(users = n_distinct(id)) %>%
mutate(cumulative = cumsum(users))
ggplot(by_biz_cancel_date,aes(x=end_date,y=users,color=plan_id)) +
geom_point(size=3) +
geom_line(size=1) +
scale_y_continuous(limit=c(0,20),breaks=seq(0,20,5)) +
labs(x='Cancellation Date',y='',title='Daily Churning Users',color='plan') +
theme_minimal()
ggplot(filter(by_biz_cancel_date,cancel_date > '2015-10-01'),aes(x=cancel_date,y=users,color=plan_id)) +
geom_point(size=3) +
geom_line(size=1) +
scale_y_continuous(limit=c(0,20),breaks=seq(0,20,5)) +
labs(x='Cancellation Date',y='',title='Daily Churning Users',color='plan') +
theme_minimal()
ggplot(filter(by_biz_cancel_date,cancel_date > '2015-10-01'),aes(x=end_date,y=users,color=plan_id)) +
geom_point(size=3) +
geom_line(size=1) +
scale_y_continuous(limit=c(0,20),breaks=seq(0,20,5)) +
labs(x='Cancellation Date',y='',title='Daily Churning Users',color='plan') +
theme_minimal()
ggplot(filter(by_biz_cancel_date,end_date > '2015-10-01'),aes(x=end_date,y=users,color=plan_id)) +
geom_point(size=3) +
geom_line(size=1) +
scale_y_continuous(limit=c(0,20),breaks=seq(0,20,5)) +
labs(x='Cancellation Date',y='',title='Daily Churning Users',color='plan') +
theme_minimal()
ggplot(filter(by_biz_cancel_date,end_date > '2015-10-01'),aes(x=end_date,y=users)) +
geom_point(size=3) +
geom_line(size=1) +
scale_y_continuous(limit=c(0,20),breaks=seq(0,20,5)) +
stat_smooth() +
labs(x='Cancellation Date',y='',title='Daily Churning Users',color='plan') +
theme_minimal()
ggplot(filter(by_biz_cancel_date,end_date > '2015-10-01'),aes(x=end_date,y=users,color=plan_id)) +
geom_point(size=3) +
geom_line(size=1) +
scale_y_continuous(limit=c(0,20),breaks=seq(0,20,5)) +
stat_smooth() +
labs(x='Cancellation Date',y='',title='Daily Churning Users',color='plan') +
theme_minimal()
ggplot(filter(by_biz_cancel_date,end_date > '2015-10-01'),aes(x=end_date,y=users,color=plan_id)) +
geom_point(size=3) +
geom_line(size=1) +
scale_y_continuous(limit=c(0,20),breaks=seq(0,20,5)) +
labs(x='Cancellation Date',y='',title='Daily Churning Users',color='plan') +
theme_minimal()
biz_end_date <- stripe %>%
filter(!(canceled_at == '' & ended_at == '') & plan_id != 'pro-annual' & plan_id != 'pro-monthly') %>%
group_by(end_date) %>%
summarise(users = n_distinct(id)) %>%
mutate(cumulative = cumsum(users))
ggplot(filter(biz_end_date,end_date > '2015-10-01'),aes(x=end_date,y=users)) +
geom_point(size=3) +
geom_line(size=1) +
geom_smooth() +
scale_y_continuous(limit=c(0,20),breaks=seq(0,20,5)) +
labs(x='Cancellation Date',y='',title='Daily Churning Users') +
theme_minimal()
ggplot(filter(biz_end_date,end_date > '2015-10-01'),aes(x=end_date,y=users)) +
geom_point(size=3) +
geom_line(size=1) +
geom_smooth() +
scale_y_continuous(limit=c(0,25),breaks=seq(0,25,5)) +
labs(x='Cancellation Date',y='',title='Daily Churning Users') +
theme_minimal()
mrr <- read.table('~/Downloads/mrr.csv',header=T,sep=',')
names(mrr) <- c('date','mrr','net_mrr')
mrr$date <- as.Date(mrr$date)
mrr <- mrr %>% arrange(date)
mrr$row <- seq(1:nrow(mrr))
mod <- lm(mrr~row,data=mrr)
## Regression Function
fun <- function(x) mod$coefficients[1] + mod$coefficients[2] * x
fun
ggplot(mrr,aes(x=row,y=mrr)) +
geom_point(size=3) +
geom_line(size=1) +
stat_function(fun=fun,color='red') +
labs(x='Date',y='MRR') +
theme_minimal()
head(mrr)
as.numeric(as.Date('2015-12-01') - as.Date('2015-08-15'))
fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-08-15')))
(fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-08-15'))) / mrr[date=='2015-11-01']$mrr) -1
mrr[date=='2015-11-01']$mrr
(fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-08-15'))) / mrr[date==as.Date('2015-11-01')]$mrr) - 1
mrr[date==as.Date('2015-11-01')]$mrr
mrr[date==as.Date('2015-11-01'),]$mrr
(fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-08-15'))) / subset(mrr,date==as.Date('2015-11-01'))$mrr) - 1
nov_mrr <- subset(mrr,date==as.Date('2015-11-01'))$mrr
nov_mrr
dec_mrr <- fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-08-15')))
dec_mrr
growth_rate <- dec_mrr/nov_mrr - 1
mrr <- read.table('~/Downloads/mrr.csv',header=T,sep=',')
names(mrr) <- c('date','mrr','net_mrr')
mrr <- mrr %>% filter(date > as.Date('2015-10-28'))
mrr$date <- as.Date(mrr$date)
mrr <- mrr %>% filter(date > as.Date('2015-10-28'))
mrr <- mrr %>% arrange(date)
mrr$row <- seq(1:nrow(mrr))
mod <- lm(mrr~row,data=mrr)
fun <- function(x) mod$coefficients[1] + mod$coefficients[2] * x
ggplot(mrr,aes(x=row,y=mrr)) +
geom_point(size=3) +
geom_line(size=1) +
stat_function(fun=fun,color='red') +
labs(x='Date',y='MRR') +
theme_minimal()
mrr$row <- seq(1:nrow(mrr))
mrr <- read.table('~/Downloads/mrr.csv',header=T,sep=',')
names(mrr) <- c('date','mrr','net_mrr')
mrr$date <- as.Date(mrr$date)
mrr <- mrr %>% filter(date > as.Date('2015-10-28'))
mrr <- mrr %>% arrange(date)
mrr$row <- seq(1:nrow(mrr))
mod <- lm(mrr~row,data=mrr)
fun <- function(x) mod$coefficients[1] + mod$coefficients[2] * x
ggplot(mrr,aes(x=row,y=mrr)) +
geom_point(size=3) +
geom_line(size=1) +
stat_function(fun=fun,color='red') +
labs(x='Date',y='MRR') +
theme_minimal()
dec_mrr <- fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-10-29')))
dec_mrr
growth_rate <- dec_mrr/nov_mrr - 1
growth_rate
nps <- read.table('~/Downloads/nps.csv',sep=',',header=T)
nps <- read.csv('~/Downloads/nps.csv',header=T)
names(nps) <- c('user_id','comment','nps_score')
agency_responders <- business_responders %>%
filter(answer_one == 'Serve clients as part of an agency')
agencies <- merge(agency_responders,nps,by='user_id',all.x=T)
table(business_responders$answer_one)
agency_responders <- business_responders %>%
filter(answer_one == 'To serve clients as part of an agency')
agencies <- merge(agency_responders,nps,by='user_id',all.x=T)
agencies <- agencies %>%
select(user_id,plan,answer_one,plan.x,comment,nps_score)
write.table(agencies,file='~/Downloads/agencies.csv',sep=',',row.names=F)
agencies <- agencies[unique(agencies$user_id),]
write.table(agencies,file='~/Downloads/agencies.csv',sep=',',row.names=F)
summary(fun)
fun
mod
dec_mrr
mrr <- read.table('~/Downloads/mrr.csv',header=T,sep=',')
names(mrr) <- c('date','mrr','net_mrr')
mrr$date <- as.Date(mrr$date)
mrr <- mrr %>% filter(date > as.Date('2015-10-28'))
mrr <- mrr %>% arrange(date)
mrr$row <- seq(1:nrow(mrr))
mod <- lm(mrr~row,data=mrr)
fun <- function(x) mod$coefficients[1] + mod$coefficients[2] * x
ggplot(mrr,aes(x=row,y=mrr)) +
geom_point(size=3) +
geom_line(size=1) +
stat_function(fun=fun,color='red') +
labs(x='Date',y='MRR') +
theme_minimal()
as.numeric(as.Date('2015-12-01') - as.Date('2015-10-29'))
fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-08-15')))
nov_mrr <- subset(mrr,date==as.Date('2015-11-01'))$mrr
nov_mrr
dec_mrr <- fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-10-29')))
dec_mrr
growth_rate <- dec_mrr/nov_mrr - 1
growth_rate
bus_interactions <- read.table('~/Downloads/bus_interactions.csv',header=T,sep=',')
names(bus_interactions) <- c('user_id','month','updates','profiles','avg_favs','avg_retweets')
bus_interactions$month <- as.Date(bus_interactions$month,'%Y-%M')
bus_interactions$month[1:10,]
bus_interactions$month[1:10]
bus_interactions$month[1:20]
bus_interactions$month[50:70]
bus_interactions <- read.table('~/Downloads/bus_interactions.csv',header=T,sep=',')
bus_interactions$month <- paste(bus_interactions$month,'-01',sep='')
bus_interactions <- read.table('~/Downloads/bus_interactions.csv',header=T,sep=',')
names(bus_interactions) <- c('user_id','month','updates','profiles','avg_favs','avg_retweets')
?paste
bus_interactions$month <- paste(bus_interactions$month,'-01')
bus_interactions <- read.table('~/Downloads/bus_interactions.csv',header=T,sep=',')
names(bus_interactions) <- c('user_id','month','updates','profiles','avg_favs','avg_retweets')
bus_interactions$month <- paste(bus_interactions$month,'-01',sep="")
bus_interactions$month <- as.Date(bus_interactions$month)
ggplot(filter(bus_interactions,user_id=='52856ee247cd663f45000096'),x=month,y=(avg_favs + avg+retweets)) +
geom_point(size=2) +
geom_line(size=1) +
theme_minimal()
ggplot(filter(bus_interactions,user_id=='52856ee247cd663f45000096'),x=month,y=(avg_favs + avg_retweets)) +
geom_point(size=2) +
geom_line(size=1) +
theme_minimal()
ggplot(filter(bus_interactions,user_id=='52856ee247cd663f45000096'),aes(x=month,y=(avg_favs + avg_retweets))) +
geom_point(size=2) +
geom_line(size=1) +
theme_minimal()
ggplot(filter(bus_interactions,user_id=='52856ee247cd663f45000096'),aes(x=month,y=avg_favs)) +
geom_point(size=2) +
geom_line(size=1) +
theme_minimal()
ggplot(filter(bus_interactions,user_id=='506c68091b81f6e27e00003c'),aes(x=month,y=avg_favs)) +
geom_point(size=2) +
geom_line(size=1) +
theme_minimal()
ggplot(filter(bus_interactions,user_id=='50c64e0e1b81f6c33a000004'),aes(x=month,y=avg_favs)) +
geom_point(size=2) +
geom_line(size=1) +
theme_minimal()
ggplot(filter(bus_interactions,user_id=='53c7bc12de82688155dba8af'),aes(x=month,y=avg_favs)) +
geom_point(size=2) +
geom_line(size=1) +
theme_minimal()
ggplot(filter(bus_interactions,user_id=='5399efd2d01cf0b361c50f74'),aes(x=month,y=avg_favs)) +
geom_point(size=2) +
geom_line(size=1) +
theme_minimal()
ggplot(filter(bus_interactions,user_id=='4f22f1d5512f7ee416000000'),aes(x=month,y=avg_favs)) +
geom_point(size=2) +
geom_line(size=1) +
theme_minimal()
large_users <- read.table('~/Downloads/large_users.csv',header=T,sep=',')
names(large_users) <- c('user_id','plan','plan_date','days_on_plan')
ggplot(large_users, aes(x=days_on_plan)) +
stat_ecdf(size=1) +
theme_minimal()
ggplot(large_users, aes(x=days_on_plan)) +
stat_ecdf(size=1) +
scale_x_continuous(breaks=seq(0,1000,180)) +
labs(x='Days on Plan',y='') +
theme_minimal()
ggplot(large_users, aes(x=days_on_plan)) +
stat_ecdf(size=1) +
scale_x_continuous(breaks=seq(0,1000,180)) +
scale_x_continuous(breaks=seq(0,1,0.2)) +
labs(x='Days on Plan',y='') +
theme_minimal()
ggplot(large_users, aes(x=days_on_plan)) +
stat_ecdf(size=1) +
scale_x_continuous(breaks=seq(0,1000,180)) +
scale_y_continuous(breaks=seq(0,1,0.2)) +
labs(x='Days on Plan',y='') +
theme_minimal()
mrr <- read.table('~/Downloads/mrr.csv',header=T,sep=',')
names(mrr) <- c('date','mrr','net_mrr')
mrr$date <- as.Date(mrr$date)
mrr <- mrr %>% filter(date > as.Date('2015-10-28'))
mrr <- mrr %>% arrange(date)
mrr$row <- seq(1:nrow(mrr))
mod <- lm(mrr~row,data=mrr)
fun <- function(x) mod$coefficients[1] + mod$coefficients[2] * x
ggplot(mrr,aes(x=row,y=mrr)) +
geom_point(size=3) +
geom_line(size=1) +
stat_function(fun=fun,color='red') +
labs(x='Date',y='MRR') +
theme_minimal()
as.numeric(as.Date('2015-12-01') - as.Date('2015-10-29'))
fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-08-15')))
nov_mrr <- subset(mrr,date==as.Date('2015-11-01'))$mrr
dec_mrr <- fun(as.numeric(as.Date('2015-12-01') - as.Date('2015-10-29')))
dec_mrr
growth_rate <- dec_mrr/nov_mrr - 1
mod
jan_mrr <- fun(as.numeric(as.Date('2015-12-31') - as.Date('2015-10-29')))
jan_mrr
dec_mrr
299646.2-285387
475*31
27.78+8.8
shiny::runApp('Documents/diversity-dash/shiny-server')
library(data.table)
library(dplyr)
library(tidyr)
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dash/shiny-server')
shiny::runApp('Documents/diversity-dashboard/shiny-server')
shiny::runApp('Documents/diversity-dashboard/shiny-server')
shiny::runApp('Documents/diversity-dashboard/shiny-server')
getwd()
?setwd
setwd(~/Documents/diversity-dashboard/)
setwd('~/Documents/diversity-dashboard/')
getwd()
shiny::runApp('shiny-server')
filename <- paste0('./data/',name,day,'.csv')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
shiny::runApp('shiny-server')
filename <- paste0('/data/',name,day,'.csv')
